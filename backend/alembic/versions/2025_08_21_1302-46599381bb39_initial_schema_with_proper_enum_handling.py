"""initial schema with proper enum handling

Revision ID: 46599381bb39
Revises: 
Create Date: 2025-08-21 13:02:43.045857

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '46599381bb39'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # Create enum types first
    op.execute("CREATE TYPE contenttype AS ENUM ('TRAINING', 'SURVEY', 'ASSESSMENT', 'GAME', 'MIXED')")
    op.execute("CREATE TYPE learningstyle AS ENUM ('VISUAL', 'AUDITORY', 'KINESTHETIC', 'READING_WRITING')")
    op.execute("CREATE TYPE contentstate AS ENUM ('DRAFT', 'SUBMITTED', 'IN_REVIEW', 'APPROVED', 'PUBLISHED', 'REJECTED', 'ARCHIVED')")
    op.execute("CREATE TYPE generationstatus AS ENUM ('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'CANCELLED')")
    
    # ### commands auto generated by Alembic - please adjust! ###
    # Convert columns to enum types with explicit casting and case conversion
    op.execute("ALTER TABLE content_items ALTER COLUMN content_type TYPE contenttype USING UPPER(content_type)::contenttype")
    op.execute("ALTER TABLE content_items ALTER COLUMN learning_style TYPE learningstyle USING UPPER(learning_style)::learningstyle")
    op.execute("ALTER TABLE content_items ALTER COLUMN state TYPE contentstate USING UPPER(state)::contentstate")
    op.execute("ALTER TABLE generation_sessions ALTER COLUMN status TYPE generationstatus USING UPPER(status)::generationstatus")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Convert columns back to VARCHAR with explicit casting
    op.execute("ALTER TABLE generation_sessions ALTER COLUMN status TYPE VARCHAR(20) USING status::text")
    op.execute("ALTER TABLE content_items ALTER COLUMN state TYPE VARCHAR(20) USING state::text")
    op.execute("ALTER TABLE content_items ALTER COLUMN learning_style TYPE VARCHAR(20) USING learning_style::text")
    op.execute("ALTER TABLE content_items ALTER COLUMN content_type TYPE VARCHAR(20) USING content_type::text")
    # ### end Alembic commands ###
    
    # Drop enum types after reverting columns
    op.execute("DROP TYPE IF EXISTS contenttype")
    op.execute("DROP TYPE IF EXISTS learningstyle") 
    op.execute("DROP TYPE IF EXISTS contentstate")
    op.execute("DROP TYPE IF EXISTS generationstatus")