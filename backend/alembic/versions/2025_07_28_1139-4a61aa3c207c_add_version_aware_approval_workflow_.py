"""Add version-aware approval workflow models

Revision ID: 4a61aa3c207c
Revises: 
Create Date: 2025-07-28 11:39:24.705748

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4a61aa3c207c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    """Upgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_approval_steps_approver_id'), table_name='approval_steps')
    op.drop_index(op.f('ix_approval_steps_id'), table_name='approval_steps')
    op.drop_index(op.f('ix_approval_steps_workflow_id'), table_name='approval_steps')
    op.drop_table('approval_steps')
    op.add_column('approval_workflows', sa.Column('content_version_id', sa.UUID(), nullable=False))
    op.add_column('approval_workflows', sa.Column('current_state', sa.String(length=30), nullable=False))
    op.add_column('approval_workflows', sa.Column('approved_at', sa.DateTime(timezone=True), nullable=True, comment='When final approval was granted'))
    op.add_column('approval_workflows', sa.Column('published_at', sa.DateTime(timezone=True), nullable=True, comment='When version was published'))
    op.add_column('approval_workflows', sa.Column('assigned_reviewer_id', sa.UUID(), nullable=True, comment='Currently assigned reviewer'))
    op.add_column('approval_workflows', sa.Column('requires_approval', sa.Boolean(), nullable=False, comment='Whether this content type requires approval'))
    op.add_column('approval_workflows', sa.Column('auto_publish', sa.Boolean(), nullable=False, comment='Automatically publish after approval'))
    op.add_column('approval_workflows', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.add_column('approval_workflows', sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False))
    op.alter_column('approval_workflows', 'submitted_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=None,
               nullable=True,
               comment='When submitted for review')
    op.drop_index(op.f('ix_approval_workflows_content_id'), table_name='approval_workflows')
    op.create_index(op.f('ix_approval_workflows_assigned_reviewer_id'), 'approval_workflows', ['assigned_reviewer_id'], unique=False)
    op.create_index(op.f('ix_approval_workflows_content_version_id'), 'approval_workflows', ['content_version_id'], unique=True)
    op.create_index(op.f('ix_approval_workflows_current_state'), 'approval_workflows', ['current_state'], unique=False)
    op.drop_constraint(op.f('approval_workflows_content_id_fkey'), 'approval_workflows', type_='foreignkey')
    op.create_foreign_key(None, 'approval_workflows', 'content_versions', ['content_version_id'], ['id'], ondelete='CASCADE')
    op.create_foreign_key(None, 'approval_workflows', 'users', ['assigned_reviewer_id'], ['id'])
    op.drop_column('approval_workflows', 'is_approved')
    op.drop_column('approval_workflows', 'current_stage')
    op.drop_column('approval_workflows', 'content_id')
    op.drop_column('approval_workflows', 'completed_at')
    op.drop_column('approval_workflows', 'is_completed')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade database schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('approval_workflows', sa.Column('is_completed', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.add_column('approval_workflows', sa.Column('completed_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
    op.add_column('approval_workflows', sa.Column('content_id', sa.UUID(), autoincrement=False, nullable=False))
    op.add_column('approval_workflows', sa.Column('current_stage', sa.VARCHAR(length=20), autoincrement=False, nullable=False))
    op.add_column('approval_workflows', sa.Column('is_approved', sa.BOOLEAN(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'approval_workflows', type_='foreignkey')
    op.drop_constraint(None, 'approval_workflows', type_='foreignkey')
    op.create_foreign_key(op.f('approval_workflows_content_id_fkey'), 'approval_workflows', 'content_items', ['content_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_approval_workflows_current_state'), table_name='approval_workflows')
    op.drop_index(op.f('ix_approval_workflows_content_version_id'), table_name='approval_workflows')
    op.drop_index(op.f('ix_approval_workflows_assigned_reviewer_id'), table_name='approval_workflows')
    op.create_index(op.f('ix_approval_workflows_content_id'), 'approval_workflows', ['content_id'], unique=True)
    op.alter_column('approval_workflows', 'submitted_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               server_default=sa.text('now()'),
               nullable=False,
               comment=None,
               existing_comment='When submitted for review')
    op.drop_column('approval_workflows', 'updated_at')
    op.drop_column('approval_workflows', 'created_at')
    op.drop_column('approval_workflows', 'auto_publish')
    op.drop_column('approval_workflows', 'requires_approval')
    op.drop_column('approval_workflows', 'assigned_reviewer_id')
    op.drop_column('approval_workflows', 'published_at')
    op.drop_column('approval_workflows', 'approved_at')
    op.drop_column('approval_workflows', 'current_state')
    op.drop_column('approval_workflows', 'content_version_id')
    op.create_table('approval_steps',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('workflow_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('stage', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('decision', sa.VARCHAR(length=20), autoincrement=False, nullable=False),
    sa.Column('approver_id', sa.UUID(), autoincrement=False, nullable=True),
    sa.Column('comments', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('internal_notes', sa.TEXT(), autoincrement=False, nullable=True, comment='Internal notes not visible to content creator'),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('decided_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['approver_id'], ['users.id'], name=op.f('approval_steps_approver_id_fkey')),
    sa.ForeignKeyConstraint(['workflow_id'], ['approval_workflows.id'], name=op.f('approval_steps_workflow_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('approval_steps_pkey'))
    )
    op.create_index(op.f('ix_approval_steps_workflow_id'), 'approval_steps', ['workflow_id'], unique=False)
    op.create_index(op.f('ix_approval_steps_id'), 'approval_steps', ['id'], unique=False)
    op.create_index(op.f('ix_approval_steps_approver_id'), 'approval_steps', ['approver_id'], unique=False)
    # ### end Alembic commands ###